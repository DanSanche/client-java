/**
 * Grafeas API
 * An API to insert and retrieve annotations on cloud artifacts.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.grafeas.v1alpha1.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.grafeas.v1alpha1.model.PgpSignedAttestation;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * Occurrence that represents a single \&quot;attestation\&quot;.  The authenticity of an Attestation can be verified using the attached signature. If the verifier trusts the public key of the signer, then verifying the signature is sufficient to establish trust.  In this circumstance, the AttestationAuthority to which this Attestation is attached is primarily useful for look-up (how to find this Attestation if you already know the Authority and artifact to be verified) and intent (which authority was this attestation intended to sign for).
 */
@ApiModel(description = "Occurrence that represents a single \"attestation\".  The authenticity of an Attestation can be verified using the attached signature. If the verifier trusts the public key of the signer, then verifying the signature is sufficient to establish trust.  In this circumstance, the AttestationAuthority to which this Attestation is attached is primarily useful for look-up (how to find this Attestation if you already know the Authority and artifact to be verified) and intent (which authority was this attestation intended to sign for).")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-10-10T18:21:51.795-04:00")
public class Attestation   {
  @SerializedName("pgpSignedAttestation")
  private PgpSignedAttestation pgpSignedAttestation = null;

  public Attestation pgpSignedAttestation(PgpSignedAttestation pgpSignedAttestation) {
    this.pgpSignedAttestation = pgpSignedAttestation;
    return this;
  }

   /**
   * Get pgpSignedAttestation
   * @return pgpSignedAttestation
  **/
  @ApiModelProperty(example = "null", value = "")
  public PgpSignedAttestation getPgpSignedAttestation() {
    return pgpSignedAttestation;
  }

  public void setPgpSignedAttestation(PgpSignedAttestation pgpSignedAttestation) {
    this.pgpSignedAttestation = pgpSignedAttestation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Attestation attestation = (Attestation) o;
    return Objects.equals(this.pgpSignedAttestation, attestation.pgpSignedAttestation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pgpSignedAttestation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Attestation {\n");
    
    sb.append("    pgpSignedAttestation: ").append(toIndentedString(pgpSignedAttestation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

